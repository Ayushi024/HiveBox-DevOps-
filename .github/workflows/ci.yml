name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --user flake8 pytest

      - name: Verify File Structure
        run: ls -R # Check if all files exist before running flake8

      - name: Lint Python Files
        run: |
          flake8 --ignore=E501 basic-versioning/app.py sensor-api/app.py sensor-api/test_app.py

      - name: Lint Dockerfiles
        run: |
          docker run --rm -v $PWD/basic-versioning/Dockerfile:/Dockerfile hadolint/hadolint hadolint --ignore=DL3008 /Dockerfile
          docker run --rm -v $PWD/sensor-api/Dockerfile:/Dockerfile hadolint/hadolint hadolint --ignore=DL3008 /Dockerfile

      - name: Build Docker Images
        run: |
          docker build -t basic-versioning:latest basic-versioning/
          docker build -t sensor-api:latest sensor-api/

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Images
        run: |
          docker tag basic-versioning:latest mydockerhub/basic-versioning:latest
          docker tag sensor-api:latest mydockerhub/sensor-api:latest
          docker push mydockerhub/basic-versioning:latest
          docker push mydockerhub/sensor-api:latest

      - name: Start Flask App in Docker
        run: |
          docker run -d -p 5000:5000 sensor-api:latest
          sleep 5

      - name: Run Unit Tests
        run: |
          pytest sensor-api/test_app.py

      - name: Check Version Endpoint
        run: |
          curl -s http://localhost:5000/version | grep "v0.0.1"
