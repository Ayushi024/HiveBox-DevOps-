name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --user flake8 pytest requests python-dotenv

      - name: Verify File Structure
        run: ls -R  # Check if all files exist before running flake8

      - name: Lint Python Files
        run: flake8 --ignore=E501 basic-versioning/app.py sensor-api/app.py sensor-api/test_app.py

      - name: Lint Dockerfiles
        run: |
          docker run --rm -v "${{ github.workspace }}/basic-versioning/Dockerfile:/Dockerfile" hadolint/hadolint hadolint --ignore=DL3008 /Dockerfile
          docker run --rm -v "${{ github.workspace }}/sensor-api/Dockerfile:/Dockerfile" hadolint/hadolint hadolint --ignore=DL3008 /Dockerfile

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/basic-versioning:latest basic-versioning/
          docker build -t ${{ secrets.DOCKER_USERNAME }}/sensor-api:latest sensor-api/

          docker push ${{ secrets.DOCKER_USERNAME }}/basic-versioning:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/sensor-api:latest

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Restart Docker Service
        run: |
          sudo systemctl restart docker

      - name: Create .env File
        run: |
          echo "OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }}" > .env

      - name: Start Services with Docker Compose
        run: docker-compose up -d --build

      - name: Wait for Services to Start
        run: sleep 10

      - name: Check Running Containers
        run: docker ps -a

      - name: Run Unit Tests in Sensor API
        run: docker exec $(docker ps -qf "name=sensor-api") pytest sensor-api/test_app.py

      - name: Test API Endpoints
        run: |
          curl -s http://localhost:5001/version | grep '"version": "v0.0.1"'
          curl -s http://localhost:5000/health | grep '"status": "ok"'

      - name: Stop and Clean Up Containers
        run: docker-compose down
