name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ca-certificates \
            curl \
            gnupg \
            python3 \
            python3-pip

      - name: Set Up Python Environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          source venv/bin/activate
          pytest tests/

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: build-and-test  # Ensures tests pass before deploying

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Remove Conflicting Packages
        run: |
          sudo apt-get remove -y containerd docker.io
          sudo apt-get autoremove -y

      - name: Install Docker from Official Repo
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ca-certificates \
            curl \
            gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo tee /etc/apt/keyrings/docker.asc > /dev/null
          sudo chmod a+r /etc/apt/keyrings/docker.asc
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

      - name: Start Docker Service
        run: sudo systemctl start docker

      - name: Verify Docker Installation
        run: docker --version

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/hivebox:latest .

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/hivebox:latest

      - name: Deploy with Docker Compose
        run: |
          OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }} docker compose up -d --build

      - name: List Running Containers
        run: docker ps -a

      - name: Clean Up Unused Docker Images
        run: docker system prune -af
